version: '3.7'

volumes:
    postgres-data: {}
    redis-data: {}
    redis-insight-data: {}

services:
    router:
        build: services/router
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
        network_mode: "host"

    frontend:
        build: services/frontend
        depends_on:
            - postgres
        volumes:
            - "../../${PROJECT_DIRECTORY}:/home/app/application:cached"
        extra_hosts:
            - "jackett.${PROJECT_ROOT_DOMAIN}:172.17.0.1"
            - "redis.${PROJECT_ROOT_DOMAIN}:172.17.0.1"
            - "transmission.${PROJECT_ROOT_DOMAIN}:172.17.0.1"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}-frontend.rule=Host(${PROJECT_DOMAINS})"
            - "traefik.http.routers.${PROJECT_NAME}-frontend.tls=true"
            - "traefik.http.routers.${PROJECT_NAME}-frontend-unsecure.rule=Host(${PROJECT_DOMAINS})"
            # Comment the next line to be able to access frontend via HTTP instead of HTTPS
            - "traefik.http.routers.${PROJECT_NAME}-frontend-unsecure.middlewares=redirect-to-https@file"

    postgres:
        build: services/postgres
        environment:
            - POSTGRES_USER=quasarr
            - POSTGRES_PASSWORD=quasarr
        ports:
            - 5432:5432
        volumes:
            - postgres-data:/var/lib/postgresql/data

    cron:
        build: services/cron
        volumes:
            - "../../${PROJECT_DIRECTORY}:/home/app/application:cached"

    redis:
        image: redis:5
        volumes:
            - "redis-data:/data"

    redis-insight:
        image: redislabs/redisinsight:1.5.0
        volumes:
            - "redis-insight-data:/db"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}-redis.rule=Host(`redis.${PROJECT_ROOT_DOMAIN}`)"
            - "traefik.http.routers.${PROJECT_NAME}-redis.tls=true"

    jackett:
        image: linuxserver/jackett:latest
        restart: unless-stopped
        volumes:
            - ./jackett/config:/config
            - ./jackett/downloads:/downloads
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}-jackett.rule=Host(`jackett.${PROJECT_ROOT_DOMAIN}`)"
            - "traefik.http.routers.${PROJECT_NAME}-jackett.tls=true"

    transmission:
        image: linuxserver/transmission
        restart: unless-stopped
        volumes:
            - type: bind
              source: ./library
              target: /library
            - ./transmission/config:/config
            - ./transmission/watch:/watch
        environment:
            - PUID=1000
            - GUID=1000
            - TRANSMISSION_WEB_HOME=/combustion-release/
            - TRANSMISSION_DOWNLOAD_DIR=/library/downloads/complete
        extra_hosts:
            - "transmission.${PROJECT_ROOT_DOMAIN}:172.17.0.1"
        ports:
            - 9091:9091
            - 51413:51413
            - 51413:51413/udp
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}-transmission.rule=Host(`transmission.${PROJECT_ROOT_DOMAIN}`)"
            - "traefik.http.routers.${PROJECT_NAME}-transmission.tls=true"

    plex:
        image: plexinc/pms-docker:public
        restart: unless-stopped
        ports:
            - 32400:32400
            - 3005:3005
            - 8324:8324
            - 32469:32469
            - 32410:32410/udp
            - 32412:32412/udp
            - 32413:32413/udp
            - 32414:32414/udp
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=Europe/Paris
            - ADVERTISE_IP=
            - PLEX_CLAIM=${PLEX_CLAIM}
        volumes:
            - ./plex/config:/config
            - type: bind
              source: ./library
              target: /library
            - ./library/shared:/shared
            - /etc/localtime:/etc/localtime:ro
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}-plex.rule=Host(`plex.${PROJECT_ROOT_DOMAIN}`)"
            - "traefik.http.routers.${PROJECT_NAME}-plex.tls=true"
            - "traefik.http.services.plex.loadbalancer.server.port=32400"
